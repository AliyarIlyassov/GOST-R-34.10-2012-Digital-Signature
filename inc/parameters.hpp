#pragma once

#include <iostream>
#include <cstring>
#include <stdio.h>
#include <assert.h>
#include <iostream>
#include <iomanip>
#include <string.h>
#include <ctype.h>
#include <limits.h>
#include <math.h>
#include <cstdlib>
#include <boost/multiprecision/cpp_int.hpp>

typedef uint8_t u8;
typedef const uint8_t cu8;
typedef uint16_t u16;
typedef const uint16_t cu16;
typedef boost::multiprecision::uint1024_t uint1024_t;

#define STATE_SIZE  8
#define INV_POWER   6
#define PARAM_SIZE  64

const uint1024_t pA256("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD97");
const uint1024_t aA256("0xC2173F1513981673AF4892C23035A27CE25E2013BF95AA33B22C656F277E7335");
const uint1024_t bA256("0x295F9BAE7428ED9CCC20E7C359A9D41A22FCCD9108E17BF7BA9337A6F8AE9513");
const uint1024_t eA256("0x01");
const uint1024_t dA256("0x0605F6B7C183FA81578BC39CFAD518132B9DF62897009AF7E522C32D6DC7BFFB");
const uint1024_t mA256("0x1000000000000000000000000000000003F63377F21ED98D70456BD55B0D8319C");
const uint1024_t qA256("0x400000000000000000000000000000000FD8CDDFC87B6635C115AF556C360C67");
const uint1024_t xA256("0x91E38443A5E82C0D880923425712B2BB658B9196932E02C78B2582FE742DAA28");
const uint1024_t yA256("0x32879423AB1A0375895786C4BB46E9565FDE0B5344766740AF268ADB32322E5C");
const uint1024_t uA256("0x0D");
const uint1024_t vA256("0x60CA1E32AA475B348488C38FAB07649CE7EF8DBE87F22E81F92B2592DBA300E7");

const uint1024_t pA512("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC7");
const uint1024_t aA512("0xDC9203E514A721875485A529D2C722FB187BC8980EB866644DE41C68E143064546E861C0E2C9EDD92ADE71F46FCF50FF2AD97F951FDA9F2A2EB6546F39689BD3");
const uint1024_t bA512("0xB4C4EE28CEBC6C2C8AC12952CF37F16AC7EFB6A9F69F4B57FFDA2E4F0DE5ADE038CBC2FFF719D2C18DE0284B8BFEF3B52B8CC7A5F5BF0A3C8D2319A5312557E1");
const uint1024_t eA512("0x01");
const uint1024_t dA512("0x9E4F5D8C017D8D9F13A5CF3CDF5BFE4DAB402D54198E31EBDE28A0621050439CA6B39E0A515C06B304E2CE43E79E369E91A0CFC2BC2A22B4CA302DBB33EE7550");
const uint1024_t mA512("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF26336E91941AAC0130CEA7FD451D40B323B6A79E9DA6849A5188F3BD1FC08FB4");
const uint1024_t qA512("0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC98CDBA46506AB004C33A9FF5147502CC8EDA9E7A769A12694623CEF47F023ED");
const uint1024_t xA512("0xE2E31EDFC23DE7BDEBE241CE593EF5DE2295B7A9CBAEF021D385F7074CEA043AA27272A7AE602BF2A7B9033DB9ED3610C6FB85487EAE97AAC5BC7928C1950148");
const uint1024_t yA512("0xF5CE40D95B5EB899ABBCCFF5911CB8577939804D6527378B8C108C3D2090FF9BE18E2D33E3021ED2EF32D85822423B6304F726AA854BAE07D0396E9A9ADDC40F");
const uint1024_t uA512("0x12"); 
const uint1024_t vA512("0x469AF79D1FB1F5E16B99592B77A01E2A0FDFB0D01794368D9A56117F7B38669522DD4B650CF789EEBF068C5D139732F0905622C04B2BAAE7600303EE73001A3D");